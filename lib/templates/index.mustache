'use strict';
Object.defineProperty(global, 'Promise', {
    configurable: false,
    writable: false,
    value: require('bluebird')
});

const config  = require('serviser-config');
const Service = require('serviser').Service;

{{#_config.sequelize}}
const sequelize = require('./lib/database/sequelize.js');
{{/_config.sequelize}}
{{#_config.storage.couchbase}}
const couchbase = require('./lib/database/couchbase.js');
{{/_config.storage.couchbase}}

const service = module.exports = new Service(config);

service.on('set-up', function() {
    require('./lib/app.js');
});

/**
 * service resources eg. storage connections, remote service SDKs
 * each registered resource have to implement `inspectIntegrity` method
 */
const resourceMgr = service.resourceManager;

{{#_config.sequelize}}
resourceMgr.register('{{{_config.sequelize.dialect}}}', sequelize);
{{/_config.sequelize}}
{{#_config.storage.couchbase}}
resourceMgr.register('couchbase', couchbase);
{{/_config.storage.couchbase}}

// serviser plugins
{{#_package.dependencies.serviser-shell}}
//User-defined shell commands
require('serviser-shell');
{{/_package.dependencies.serviser-shell}}
{{#_package.dependencies.serviser-cli}}
//Service monitoring/inspection
require('serviser-cli');
{{/_package.dependencies.serviser-cli}}
{{#_package.dependencies.serviser-doc}}
//Autogeneration of Service API documentation
require('serviser-doc');
{{/_package.dependencies.serviser-doc}}
{{#_package.dependencies.serviser-restfulness}}
//Instant API features
require('serviser-restfulness');
{{/_package.dependencies.serviser-restfulness}}
{{#_package.dependencies.serviser-restfulness-seeder}}
//provides ./node_modules/.bin/serviser seed shell command
require('serviser-restfulness-seeder');
{{/_package.dependencies.serviser-restfulness-seeder}}
